// PROSECU - Script de Seed para datos de ejemplo
// Migraci√≥n a Node.js + PostgreSQL + Vercel/Railway

import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Iniciando seed de base de datos...')

  // Limpiar datos existentes
  await prisma.alert.deleteMany()
  await prisma.transformerProcedurePhoto.deleteMany()
  await prisma.transformerProcedure.deleteMany()
  await prisma.workOrderTransformer.deleteMany()
  await prisma.workOrderPhoto.deleteMany()
  await prisma.workOrderStep.deleteMany()
  await prisma.route.deleteMany()
  await prisma.safetyEquipment.deleteMany()
  await prisma.training.deleteMany()
  await prisma.document.deleteMany()
  await prisma.workOrder.deleteMany()
  await prisma.crewMember.deleteMany()
  await prisma.crew.deleteMany()
  await prisma.projectAssignment.deleteMany()
  await prisma.project.deleteMany()
  await prisma.transformer.deleteMany()
  await prisma.procedureCatalog.deleteMany()
  await prisma.personnel.deleteMany()
  await prisma.user.deleteMany()

  // Crear usuarios
  const hashedPassword = await bcrypt.hash('admin123', 10)
  
  const users = await prisma.user.createMany({
    data: [
      {
        email: 'admin@prosecu.com',
        username: 'admin',
        name: 'Administrador Sistema',
        password: hashedPassword,
        role: 'MANAGER'
      },
      {
        email: 'supervisor@prosecu.com',
        username: 'supervisor',
        name: 'Supervisor Operaciones',
        password: hashedPassword,
        role: 'SUPERVISOR'
      },
      {
        email: 'operador@prosecu.com',
        username: 'operador',
        name: 'Operador Campo',
        password: hashedPassword,
        role: 'CREW'
      }
    ]
  })
  console.log(`‚úÖ ${users.count} usuarios creados`)

  // Crear personal
  const personnel = await prisma.personnel.createMany({
    data: [
      {
        employeeId: 'PRSCU001',
        fullName: 'Carlos Rodr√≠guez Mart√≠nez',
        firstName: 'Carlos',
        lastName: 'Rodr√≠guez',
        position: 'Supervisor T√©cnico',
        department: 'Mantenimiento',
        email: 'carlos.rodriguez@prosecu.com',
        phone: '+1-713-555-0101',
        address: '1234 Main St',
        city: 'Houston',
        state: 'TX',
        zipCode: '77002',
        hireDate: new Date('2020-01-15'),
        status: 'ACTIVE'
      },
      {
        employeeId: 'PRSCU002',
        fullName: 'Mar√≠a Elena V√°squez',
        firstName: 'Mar√≠a',
        lastName: 'V√°squez',
        position: 'Ingeniera El√©ctrica',
        department: 'Ingenier√≠a',
        email: 'maria.vasquez@prosecu.com',
        phone: '+1-713-555-0102',
        address: '5678 Oak Ave',
        city: 'Dallas',
        state: 'TX',
        zipCode: '75201',
        hireDate: new Date('2021-03-20'),
        status: 'ACTIVE'
      },
      {
        employeeId: 'PRSCU003',
        fullName: 'Miguel √Ångel Torres',
        firstName: 'Miguel',
        lastName: 'Torres',
        position: 'T√©cnico Senior',
        department: 'Operaciones',
        email: 'miguel.torres@prosecu.com',
        phone: '+1-713-555-0103',
        address: '9012 Pine Rd',
        city: 'San Antonio',
        state: 'TX',
        zipCode: '78201',
        hireDate: new Date('2019-08-10'),
        status: 'ACTIVE'
      },
      {
        employeeId: 'PRSCU004',
        fullName: 'Roberto Jim√©nez',
        firstName: 'Roberto',
        lastName: 'Jim√©nez',
        position: 'Operador Campo',
        department: 'Operaciones',
        email: 'roberto.jimenez@prosecu.com',
        phone: '+1-713-555-0104',
        address: '3456 Elm St',
        city: 'Austin',
        state: 'TX',
        zipCode: '73301',
        hireDate: new Date('2022-06-01'),
        status: 'ACTIVE'
      }
    ]
  })
  console.log(`‚úÖ ${personnel.count} personal creado`)

  // Obtener IDs de personal para relaciones
  const allPersonnel = await prisma.personnel.findMany()

  // Crear proyectos
  const projects = await prisma.project.createMany({
    data: [
      {
        projectName: 'Mantenimiento Subestaci√≥n Houston North',
        projectCode: 'PRSCU-TX-2025-001',
        clientName: 'CenterPoint Energy',
        location: 'Houston',
        state: 'TX',
        description: 'Mantenimiento preventivo de transformadores de potencia en subestaci√≥n de 138kV',
        startDate: new Date('2025-02-01'),
        endDate: new Date('2025-02-15'),
        estimatedDuration: 14,
        status: 'ACTIVE',
        priority: 'HIGH',
        budget: BigInt(15000000), // $150,000 en centavos
        requiredPersonnel: 4
      },
      {
        projectName: 'Instalaci√≥n Transformador Dallas',
        projectCode: 'PRSCU-TX-2025-002',
        clientName: 'Oncor Electric Delivery',
        location: 'Dallas',
        state: 'TX',
        description: 'Instalaci√≥n de nuevo transformador de distribuci√≥n 25MVA',
        startDate: new Date('2025-03-01'),
        endDate: new Date('2025-03-10'),
        estimatedDuration: 10,
        status: 'PLANNING',
        priority: 'MEDIUM',
        budget: BigInt(8500000), // $85,000 en centavos
        requiredPersonnel: 3
      },
      {
        projectName: 'Reparaci√≥n Emergencia San Antonio',
        projectCode: 'PRSCU-TX-2025-003',
        clientName: 'CPS Energy',
        location: 'San Antonio',
        state: 'TX',
        description: 'Reparaci√≥n de emergencia en transformador principal',
        startDate: new Date('2025-01-20'),
        endDate: new Date('2025-01-25'),
        estimatedDuration: 5,
        status: 'COMPLETED',
        priority: 'CRITICAL',
        budget: BigInt(5000000), // $50,000 en centavos
        requiredPersonnel: 2
      }
    ]
  })
  console.log(`‚úÖ ${projects.count} proyectos creados`)

  // Crear cuadrillas
  const crews = await prisma.crew.createMany({
    data: [
      {
        crewName: 'Cuadrilla Alpha',
        crewCode: 'CA-001',
        supervisorName: 'Carlos Rodr√≠guez',
        location: 'Houston, TX',
        status: 'AVAILABLE',
        description: 'Cuadrilla especializada en mantenimiento de transformadores de alta tensi√≥n'
      },
      {
        crewName: 'Cuadrilla Beta',
        crewCode: 'CB-002',
        supervisorName: 'Mar√≠a V√°squez',
        location: 'Dallas, TX',
        status: 'ASSIGNED',
        description: 'Equipo de instalaci√≥n y reparaci√≥n de transformadores de distribuci√≥n'
      }
    ]
  })
  console.log(`‚úÖ ${crews.count} cuadrillas creadas`)

  // Crear transformadores
  const transformers = await prisma.transformer.createMany({
    data: [
      {
        serialNumber: 'TXF-2024-001',
        model: 'ABB 100MVA',
        manufacturer: 'ABB',
        voltage: '138/13.8 kV',
        power: '100 MVA',
        installDate: new Date('2020-05-15'),
        location: 'Subestaci√≥n Norte Houston',
        coordinates: '29.7604,-95.3698',
        status: 'OPERATIONAL',
        lastMaintenance: new Date('2024-12-01'),
        nextMaintenance: new Date('2025-06-01')
      },
      {
        serialNumber: 'TXF-2024-002',
        model: 'Siemens 50MVA',
        manufacturer: 'Siemens',
        voltage: '69/12.47 kV',
        power: '50 MVA',
        installDate: new Date('2021-08-20'),
        location: 'Subestaci√≥n Este Dallas',
        coordinates: '32.7767,-96.7970',
        status: 'OPERATIONAL',
        lastMaintenance: new Date('2024-11-15'),
        nextMaintenance: new Date('2025-05-15')
      },
      {
        serialNumber: 'TXF-2024-003',
        model: 'General Electric 25MVA',
        manufacturer: 'General Electric',
        voltage: '34.5/4.16 kV',
        power: '25 MVA',
        installDate: new Date('2019-03-10'),
        location: 'Subestaci√≥n Sur San Antonio',
        coordinates: '29.4241,-98.4936',
        status: 'MAINTENANCE',
        lastMaintenance: new Date('2024-10-30'),
        nextMaintenance: new Date('2025-04-30')
      }
    ]
  })
  console.log(`‚úÖ ${transformers.count} transformadores creados`)

  // Crear cat√°logo de procedimientos
  const procedures = await prisma.procedureCatalog.createMany({
    data: [
      {
        title: 'Inspecci√≥n Visual de Transformador',
        category: 'Mantenimiento Preventivo',
        description: 'Inspecci√≥n visual completa del transformador y sus componentes',
        instructions: JSON.stringify([
          'Verificar estado f√≠sico del tanque',
          'Inspeccionar bushings y aisladores',
          'Revisar sistema de enfriamiento',
          'Comprobar indicadores y medidores',
          'Documentar anomal√≠as encontradas'
        ]),
        safetyNotes: 'Usar EPP completo. Verificar desenergizaci√≥n antes de iniciar.',
        estimatedTime: 120,
        requiredPersonnel: 2
      },
      {
        title: 'An√°lisis de Aceite Diel√©ctrico',
        category: 'An√°lisis',
        description: 'Toma de muestra y an√°lisis del aceite diel√©ctrico',
        instructions: JSON.stringify([
          'Preparar equipo de muestreo',
          'Tomar muestra en recipiente limpio',
          'Etiquetar muestra correctamente',
          'Enviar a laboratorio autorizado',
          'Registrar datos en bit√°cora'
        ]),
        safetyNotes: 'Evitar contaminaci√≥n de la muestra. Usar guantes nitrilo.',
        estimatedTime: 45,
        requiredPersonnel: 1
      },
      {
        title: 'Medici√≥n de Resistencia de Aislamiento',
        category: 'Pruebas El√©ctricas',
        description: 'Medici√≥n de resistencia de aislamiento con meg√≥hmetro',
        instructions: JSON.stringify([
          'Verificar desenergizaci√≥n completa',
          'Conectar meg√≥hmetro seg√∫n diagrama',
          'Realizar mediciones en secuencia',
          'Registrar valores obtenidos',
          'Comparar con valores hist√≥ricos'
        ]),
        safetyNotes: 'Equipo completamente desenergizado. Verificar ausencia de tensi√≥n.',
        estimatedTime: 90,
        requiredPersonnel: 2
      }
    ]
  })
  console.log(`‚úÖ ${procedures.count} procedimientos creados`)

  // Crear √≥rdenes de trabajo
  const workOrders = await prisma.workOrder.createMany({
    data: [
      {
        orderNumber: 'WO-2025-001',
        title: 'Mantenimiento Preventivo TXF-2024-001',
        description: 'Mantenimiento preventivo programado para transformador ABB 100MVA',
        priority: 'HIGH',
        status: 'ASSIGNED',
        location: 'Subestaci√≥n Norte Houston',
        address: '1000 Industrial Blvd, Houston, TX 77002',
        coordinates: '29.7604,-95.3698',
        clientName: 'CenterPoint Energy',
        contactInfo: 'Juan P√©rez - (713) 555-0200',
        estimatedHours: 8.0,
        scheduledDate: new Date('2025-02-05')
      },
      {
        orderNumber: 'WO-2025-002',
        title: 'Instalaci√≥n Nuevo Transformador Dallas',
        description: 'Instalaci√≥n de transformador Siemens 25MVA en nueva subestaci√≥n',
        priority: 'MEDIUM',
        status: 'PENDING',
        location: 'Subestaci√≥n Nueva Dallas',
        address: '2500 Commerce St, Dallas, TX 75201',
        coordinates: '32.7767,-96.7970',
        clientName: 'Oncor Electric Delivery',
        contactInfo: 'Ana Garc√≠a - (214) 555-0300',
        estimatedHours: 12.0,
        scheduledDate: new Date('2025-03-05')
      },
      {
        orderNumber: 'WO-2025-003',
        title: 'Reparaci√≥n Emergencia San Antonio',
        description: 'Reparaci√≥n de falla en transformador principal',
        priority: 'EMERGENCY',
        status: 'COMPLETED',
        location: 'Subestaci√≥n Sur San Antonio',
        address: '800 Military Dr, San Antonio, TX 78201',
        coordinates: '29.4241,-98.4936',
        clientName: 'CPS Energy',
        contactInfo: 'Luis Morales - (210) 555-0400',
        estimatedHours: 6.0,
        actualHours: 8.5,
        scheduledDate: new Date('2025-01-20'),
        completedDate: new Date('2025-01-21')
      }
    ]
  })
  console.log(`‚úÖ ${workOrders.count} √≥rdenes de trabajo creadas`)

  // Crear alertas
  const alerts = await prisma.alert.createMany({
    data: [
      {
        type: 'MAINTENANCE',
        title: 'Mantenimiento Programado',
        message: 'Transformador TXF-2024-001 requiere mantenimiento en 7 d√≠as',
        severity: 'MEDIUM',
        status: 'ACTIVE',
        entityType: 'transformer',
        entityId: 1
      },
      {
        type: 'DOCUMENT_EXPIRY',
        title: 'Certificaci√≥n Pr√≥xima a Vencer',
        message: 'Certificaci√≥n de soldadura de Miguel Torres vence en 15 d√≠as',
        severity: 'HIGH',
        status: 'ACTIVE',
        entityType: 'personnel',
        entityId: 3
      },
      {
        type: 'SAFETY',
        title: 'Inspecci√≥n de EPP Pendiente',
        message: 'Equipo de protecci√≥n personal requiere calibraci√≥n',
        severity: 'MEDIUM',
        status: 'ACTIVE'
      }
    ]
  })
  console.log(`‚úÖ ${alerts.count} alertas creadas`)

  // Crear documentos de ejemplo
  const documents = await prisma.document.createMany({
    data: [
      {
        personnelId: allPersonnel[0].id,
        documentType: 'CERTIFICATION',
        documentNumber: 'CERT-2024-001',
        issueDate: new Date('2024-01-15'),
        expirationDate: new Date('2026-01-15'),
        fileName: 'certificacion_soldadura.pdf',
        status: 'ACTIVE'
      },
      {
        personnelId: allPersonnel[1].id,
        documentType: 'LICENSE',
        documentNumber: 'LIC-ENG-2024',
        issueDate: new Date('2024-03-01'),
        expirationDate: new Date('2026-03-01'),
        fileName: 'licencia_ingenieria.pdf',
        status: 'ACTIVE'
      }
    ]
  })
  console.log(`‚úÖ ${documents.count} documentos creados`)

  console.log('üéâ Seed completado exitosamente!')
}

main()
  .then(async () => {
    await prisma.$disconnect()
  })
  .catch(async (e) => {
    console.error('‚ùå Error en seed:', e)
    await prisma.$disconnect()
    process.exit(1)
  })